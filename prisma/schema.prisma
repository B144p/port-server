generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AboutMe {
  id      String  @id @default(uuid())
  intro   String
  bio     String?
  mission String?
}

model Education {
  id           String                 @id @default(uuid())
  title        String
  startDate    Int
  endDate      Int?
  descriptions EducationDescription[]
}

model EducationDescription {
  id          String    @id @default(uuid())
  education   Education @relation(fields: [educationId], references: [id], onDelete: Cascade)
  educationId String
  description String
}

model Experience {
  id               String                     @id @default(uuid())
  company          String
  role             String
  startDate        Int
  endDate          Int?
  responsibilities ExperienceResponsibility[]
}

model ExperienceResponsibility {
  id           String     @id @default(uuid())
  experience   Experience @relation(fields: [experienceId], references: [id], onDelete: Cascade)
  experienceId String
  description  String
}

model Statistics {
  id               String               @id @default(uuid())
  startDate        Int
  endDate          Int
  totalSeconds     Int
  humanReadable    String
  lastFetch        DateTime             @default(now())
  languages        StatisticsLanguage[]
  operatingSystems StatisticsOS[]
  contributions    ContributionChart[]
}

model StatisticsLanguage {
  id            String     @id @default(uuid())
  statistics    Statistics @relation(fields: [statisticsId], references: [id], onDelete: Cascade)
  statisticsId  String
  language      String
  totalSeconds  Int
  humanReadable String
  percent       Float
}

model StatisticsOS {
  id            String     @id @default(uuid())
  statistics    Statistics @relation(fields: [statisticsId], references: [id], onDelete: Cascade)
  statisticsId  String
  os            String
  totalSeconds  Int
  humanReadable String
  percent       Float
}

model ContributionChart {
  id           String     @id @default(uuid())
  statistics   Statistics @relation(fields: [statisticsId], references: [id], onDelete: Cascade)
  statisticsId String
  date         Int
  totalSeconds Int
}

model Project {
  id          String       @id @default(uuid())
  title       String
  description String
  preview     String?      @db.Text // nullable
  logo        String?      @db.Text // nullable
  inProgress  Boolean
  tags        ProjectTag[]
}

model ProjectTag {
  id        String  @id @default(uuid())
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String
  tag       String
}

model Contact {
  id    String @id @default(uuid())
  title String
  url   String
}
